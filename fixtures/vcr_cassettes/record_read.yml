---
http_interactions:
- request:
    method: post
    uri: http://127.0.0.1:2000/api/v1/links
    body:
      encoding: UTF-8
      string: title=test&url=http%3A%2F%2Ftest.com
    headers:
      User-Agent:
      - Faraday v0.10.0
      Content-Type:
      - application/x-www-form-urlencoded
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 404
      message: Not Found
    headers:
      Content-Type:
      - text/html; charset=utf-8
      X-Web-Console-Session-Id:
      - 4f58535aa0f6bf4c7a914d267225e033
      X-Web-Console-Mount-Point:
      - "/__web_console"
      X-Request-Id:
      - f3abb827-85cc-4e54-88f7-3e5465b35830
      X-Runtime:
      - '0.284047'
      Content-Length:
      - '51626'
    body:
      encoding: UTF-8
      string: "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\"
        />\n  <title>Action Controller: Exception caught</title>\n  <style>\n    body
        {\n      background-color: #FAFAFA;\n      color: #333;\n      margin: 0px;\n
        \   }\n\n    body, p, ol, ul, td {\n      font-family: helvetica, verdana,
        arial, sans-serif;\n      font-size:   13px;\n      line-height: 18px;\n    }\n\n
        \   pre {\n      font-size: 11px;\n      white-space: pre-wrap;\n    }\n\n
        \   pre.box {\n      border: 1px solid #EEE;\n      padding: 10px;\n      margin:
        0px;\n      width: 958px;\n    }\n\n    header {\n      color: #F0F0F0;\n
        \     background: #C52F24;\n      padding: 0.5em 1.5em;\n    }\n\n    h1 {\n
        \     margin: 0.2em 0;\n      line-height: 1.1em;\n      font-size: 2em;\n
        \   }\n\n    h2 {\n      color: #C52F24;\n      line-height: 25px;\n    }\n\n
        \   .details {\n      border: 1px solid #D0D0D0;\n      border-radius: 4px;\n
        \     margin: 1em 0px;\n      display: block;\n      width: 978px;\n    }\n\n
        \   .summary {\n      padding: 8px 15px;\n      border-bottom: 1px solid #D0D0D0;\n
        \     display: block;\n    }\n\n    .details pre {\n      margin: 5px;\n      border:
        none;\n    }\n\n    #container {\n      box-sizing: border-box;\n      width:
        100%;\n      padding: 0 1.5em;\n    }\n\n    .source * {\n      margin: 0px;\n
        \     padding: 0px;\n    }\n\n    .source {\n      border: 1px solid #D9D9D9;\n
        \     background: #ECECEC;\n      width: 978px;\n    }\n\n    .source pre
        {\n      padding: 10px 0px;\n      border: none;\n    }\n\n    .source .data
        {\n      font-size: 80%;\n      overflow: auto;\n      background-color: #FFF;\n
        \   }\n\n    .info {\n      padding: 0.5em;\n    }\n\n    .source .data .line_numbers
        {\n      background-color: #ECECEC;\n      color: #AAA;\n      padding: 1em
        .5em;\n      border-right: 1px solid #DDD;\n      text-align: right;\n    }\n\n
        \   .line {\n      padding-left: 10px;\n    }\n\n    .line:hover {\n      background-color:
        #F6F6F6;\n    }\n\n    .line.active {\n      background-color: #FFCCCC;\n
        \   }\n\n    .hidden {\n      display: none;\n    }\n\n    a { color: #980905;
        }\n    a:visited { color: #666; }\n    a.trace-frames { color: #666; }\n    a:hover
        { color: #C52F24; }\n    a.trace-frames.selected { color: #C52F24 }\n\n      #route_table
        {\n    margin: 0;\n    border-collapse: collapse;\n  }\n\n  #route_table thead
        tr {\n    border-bottom: 2px solid #ddd;\n  }\n\n  #route_table thead tr.bottom
        {\n    border-bottom: none;\n  }\n\n  #route_table thead tr.bottom th {\n
        \   padding: 10px 0;\n    line-height: 15px;\n  }\n\n  #route_table tbody
        tr {\n    border-bottom: 1px solid #ddd;\n  }\n\n  #route_table tbody tr:nth-child(odd)
        {\n    background: #f2f2f2;\n  }\n\n  #route_table tbody.exact_matches,\n
        \ #route_table tbody.fuzzy_matches {\n    background-color: LightGoldenRodYellow;\n
        \   border-bottom: solid 2px SlateGrey;\n  }\n\n  #route_table tbody.exact_matches
        tr,\n  #route_table tbody.fuzzy_matches tr {\n    background: none;\n    border-bottom:
        none;\n  }\n\n  #route_table td {\n    padding: 4px 30px;\n  }\n\n  #path_search
        {\n    width: 80%;\n    font-size: inherit;\n  }\n\n  </style>\n\n  <script>\n
        \   var toggle = function(id) {\n      var s = document.getElementById(id).style;\n
        \     s.display = s.display == 'none' ? 'block' : 'none';\n      return false;\n
        \   }\n    var show = function(id) {\n      document.getElementById(id).style.display
        = 'block';\n    }\n    var hide = function(id) {\n      document.getElementById(id).style.display
        = 'none';\n    }\n    var toggleTrace = function() {\n      return toggle('blame_trace');\n
        \   }\n    var toggleSessionDump = function() {\n      return toggle('session_dump');\n
        \   }\n    var toggleEnvDump = function() {\n      return toggle('env_dump');\n
        \   }\n  </script>\n</head>\n<body>\n\n<header>\n  <h1>Routing Error</h1>\n</header>\n<div
        id=\"container\">\n  <h2>No route matches [POST] &quot;/api/v1/links&quot;</h2>\n\n
        \ \n<p><code>Rails.root: /Users/RyanWorkman/turing/Module4/class-execrcise/final-ass/hot-reader</code></p>\n\n<div
        id=\"traces\">\n    <a href=\"#\" onclick=\"hide(&#39;Framework-Trace&#39;);hide(&#39;Full-Trace&#39;);show(&#39;Application-Trace&#39;);;
        return false;\">Application Trace</a> |\n    <a href=\"#\" onclick=\"hide(&#39;Application-Trace&#39;);hide(&#39;Full-Trace&#39;);show(&#39;Framework-Trace&#39;);;
        return false;\">Framework Trace</a> |\n    <a href=\"#\" onclick=\"hide(&#39;Application-Trace&#39;);hide(&#39;Framework-Trace&#39;);show(&#39;Full-Trace&#39;);;
        return false;\">Full Trace</a> \n\n    <div id=\"Application-Trace\" style=\"display:
        block;\">\n      <pre><code></code></pre>\n    </div>\n    <div id=\"Framework-Trace\"
        style=\"display: none;\">\n      <pre><code><a class=\"trace-frames\" data-frame-id=\"0\"
        href=\"#\">actionpack (5.0.0.1) lib/action_dispatch/middleware/debug_exceptions.rb:53:in
        `call&#39;</a><br><a class=\"trace-frames\" data-frame-id=\"1\" href=\"#\">web-console
        (3.4.0) lib/web_console/middleware.rb:135:in `call_app&#39;</a><br><a class=\"trace-frames\"
        data-frame-id=\"2\" href=\"#\">web-console (3.4.0) lib/web_console/middleware.rb:28:in
        `block in call&#39;</a><br><a class=\"trace-frames\" data-frame-id=\"3\" href=\"#\">web-console
        (3.4.0) lib/web_console/middleware.rb:18:in `catch&#39;</a><br><a class=\"trace-frames\"
        data-frame-id=\"4\" href=\"#\">web-console (3.4.0) lib/web_console/middleware.rb:18:in
        `call&#39;</a><br><a class=\"trace-frames\" data-frame-id=\"5\" href=\"#\">actionpack
        (5.0.0.1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call&#39;</a><br><a
        class=\"trace-frames\" data-frame-id=\"6\" href=\"#\">railties (5.0.0.1) lib/rails/rack/logger.rb:36:in
        `call_app&#39;</a><br><a class=\"trace-frames\" data-frame-id=\"7\" href=\"#\">railties
        (5.0.0.1) lib/rails/rack/logger.rb:24:in `block in call&#39;</a><br><a class=\"trace-frames\"
        data-frame-id=\"8\" href=\"#\">activesupport (5.0.0.1) lib/active_support/tagged_logging.rb:70:in
        `block in tagged&#39;</a><br><a class=\"trace-frames\" data-frame-id=\"9\"
        href=\"#\">activesupport (5.0.0.1) lib/active_support/tagged_logging.rb:26:in
        `tagged&#39;</a><br><a class=\"trace-frames\" data-frame-id=\"10\" href=\"#\">activesupport
        (5.0.0.1) lib/active_support/tagged_logging.rb:70:in `tagged&#39;</a><br><a
        class=\"trace-frames\" data-frame-id=\"11\" href=\"#\">railties (5.0.0.1)
        lib/rails/rack/logger.rb:24:in `call&#39;</a><br><a class=\"trace-frames\"
        data-frame-id=\"12\" href=\"#\">sprockets-rails (3.2.0) lib/sprockets/rails/quiet_assets.rb:13:in
        `call&#39;</a><br><a class=\"trace-frames\" data-frame-id=\"13\" href=\"#\">actionpack
        (5.0.0.1) lib/action_dispatch/middleware/request_id.rb:24:in `call&#39;</a><br><a
        class=\"trace-frames\" data-frame-id=\"14\" href=\"#\">rack (2.0.1) lib/rack/method_override.rb:22:in
        `call&#39;</a><br><a class=\"trace-frames\" data-frame-id=\"15\" href=\"#\">rack
        (2.0.1) lib/rack/runtime.rb:22:in `call&#39;</a><br><a class=\"trace-frames\"
        data-frame-id=\"16\" href=\"#\">activesupport (5.0.0.1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in
        `call&#39;</a><br><a class=\"trace-frames\" data-frame-id=\"17\" href=\"#\">actionpack
        (5.0.0.1) lib/action_dispatch/middleware/executor.rb:12:in `call&#39;</a><br><a
        class=\"trace-frames\" data-frame-id=\"18\" href=\"#\">actionpack (5.0.0.1)
        lib/action_dispatch/middleware/static.rb:136:in `call&#39;</a><br><a class=\"trace-frames\"
        data-frame-id=\"19\" href=\"#\">rack (2.0.1) lib/rack/sendfile.rb:111:in `call&#39;</a><br><a
        class=\"trace-frames\" data-frame-id=\"20\" href=\"#\">railties (5.0.0.1)
        lib/rails/engine.rb:522:in `call&#39;</a><br><a class=\"trace-frames\" data-frame-id=\"21\"
        href=\"#\">puma (3.6.2) lib/puma/configuration.rb:225:in `call&#39;</a><br><a
        class=\"trace-frames\" data-frame-id=\"22\" href=\"#\">puma (3.6.2) lib/puma/server.rb:578:in
        `handle_request&#39;</a><br><a class=\"trace-frames\" data-frame-id=\"23\"
        href=\"#\">puma (3.6.2) lib/puma/server.rb:415:in `process_client&#39;</a><br><a
        class=\"trace-frames\" data-frame-id=\"24\" href=\"#\">puma (3.6.2) lib/puma/server.rb:275:in
        `block in run&#39;</a><br><a class=\"trace-frames\" data-frame-id=\"25\" href=\"#\">puma
        (3.6.2) lib/puma/thread_pool.rb:116:in `block in spawn_thread&#39;</a><br></code></pre>\n
        \   </div>\n    <div id=\"Full-Trace\" style=\"display: none;\">\n      <pre><code><a
        class=\"trace-frames\" data-frame-id=\"0\" href=\"#\">actionpack (5.0.0.1)
        lib/action_dispatch/middleware/debug_exceptions.rb:53:in `call&#39;</a><br><a
        class=\"trace-frames\" data-frame-id=\"1\" href=\"#\">web-console (3.4.0)
        lib/web_console/middleware.rb:135:in `call_app&#39;</a><br><a class=\"trace-frames\"
        data-frame-id=\"2\" href=\"#\">web-console (3.4.0) lib/web_console/middleware.rb:28:in
        `block in call&#39;</a><br><a class=\"trace-frames\" data-frame-id=\"3\" href=\"#\">web-console
        (3.4.0) lib/web_console/middleware.rb:18:in `catch&#39;</a><br><a class=\"trace-frames\"
        data-frame-id=\"4\" href=\"#\">web-console (3.4.0) lib/web_console/middleware.rb:18:in
        `call&#39;</a><br><a class=\"trace-frames\" data-frame-id=\"5\" href=\"#\">actionpack
        (5.0.0.1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call&#39;</a><br><a
        class=\"trace-frames\" data-frame-id=\"6\" href=\"#\">railties (5.0.0.1) lib/rails/rack/logger.rb:36:in
        `call_app&#39;</a><br><a class=\"trace-frames\" data-frame-id=\"7\" href=\"#\">railties
        (5.0.0.1) lib/rails/rack/logger.rb:24:in `block in call&#39;</a><br><a class=\"trace-frames\"
        data-frame-id=\"8\" href=\"#\">activesupport (5.0.0.1) lib/active_support/tagged_logging.rb:70:in
        `block in tagged&#39;</a><br><a class=\"trace-frames\" data-frame-id=\"9\"
        href=\"#\">activesupport (5.0.0.1) lib/active_support/tagged_logging.rb:26:in
        `tagged&#39;</a><br><a class=\"trace-frames\" data-frame-id=\"10\" href=\"#\">activesupport
        (5.0.0.1) lib/active_support/tagged_logging.rb:70:in `tagged&#39;</a><br><a
        class=\"trace-frames\" data-frame-id=\"11\" href=\"#\">railties (5.0.0.1)
        lib/rails/rack/logger.rb:24:in `call&#39;</a><br><a class=\"trace-frames\"
        data-frame-id=\"12\" href=\"#\">sprockets-rails (3.2.0) lib/sprockets/rails/quiet_assets.rb:13:in
        `call&#39;</a><br><a class=\"trace-frames\" data-frame-id=\"13\" href=\"#\">actionpack
        (5.0.0.1) lib/action_dispatch/middleware/request_id.rb:24:in `call&#39;</a><br><a
        class=\"trace-frames\" data-frame-id=\"14\" href=\"#\">rack (2.0.1) lib/rack/method_override.rb:22:in
        `call&#39;</a><br><a class=\"trace-frames\" data-frame-id=\"15\" href=\"#\">rack
        (2.0.1) lib/rack/runtime.rb:22:in `call&#39;</a><br><a class=\"trace-frames\"
        data-frame-id=\"16\" href=\"#\">activesupport (5.0.0.1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in
        `call&#39;</a><br><a class=\"trace-frames\" data-frame-id=\"17\" href=\"#\">actionpack
        (5.0.0.1) lib/action_dispatch/middleware/executor.rb:12:in `call&#39;</a><br><a
        class=\"trace-frames\" data-frame-id=\"18\" href=\"#\">actionpack (5.0.0.1)
        lib/action_dispatch/middleware/static.rb:136:in `call&#39;</a><br><a class=\"trace-frames\"
        data-frame-id=\"19\" href=\"#\">rack (2.0.1) lib/rack/sendfile.rb:111:in `call&#39;</a><br><a
        class=\"trace-frames\" data-frame-id=\"20\" href=\"#\">railties (5.0.0.1)
        lib/rails/engine.rb:522:in `call&#39;</a><br><a class=\"trace-frames\" data-frame-id=\"21\"
        href=\"#\">puma (3.6.2) lib/puma/configuration.rb:225:in `call&#39;</a><br><a
        class=\"trace-frames\" data-frame-id=\"22\" href=\"#\">puma (3.6.2) lib/puma/server.rb:578:in
        `handle_request&#39;</a><br><a class=\"trace-frames\" data-frame-id=\"23\"
        href=\"#\">puma (3.6.2) lib/puma/server.rb:415:in `process_client&#39;</a><br><a
        class=\"trace-frames\" data-frame-id=\"24\" href=\"#\">puma (3.6.2) lib/puma/server.rb:275:in
        `block in run&#39;</a><br><a class=\"trace-frames\" data-frame-id=\"25\" href=\"#\">puma
        (3.6.2) lib/puma/thread_pool.rb:116:in `block in spawn_thread&#39;</a><br></code></pre>\n
        \   </div>\n\n  <script type=\"text/javascript\">\n    var traceFrames = document.getElementsByClassName('trace-frames');\n
        \   var selectedFrame, currentSource = document.getElementById('frame-source-0');\n\n
        \   // Add click listeners for all stack frames\n    for (var i = 0; i < traceFrames.length;
        i++) {\n      traceFrames[i].addEventListener('click', function(e) {\n        e.preventDefault();\n
        \       var target = e.target;\n        var frame_id = target.dataset.frameId;\n\n
        \       if (selectedFrame) {\n          selectedFrame.className = selectedFrame.className.replace(\"selected\",
        \"\");\n        }\n\n        target.className += \" selected\";\n        selectedFrame
        = target;\n\n        // Change the extracted source code\n        changeSourceExtract(frame_id);\n
        \     });\n\n      function changeSourceExtract(frame_id) {\n        var el
        = document.getElementById('frame-source-' + frame_id);\n        if (currentSource
        && el) {\n          currentSource.className += \" hidden\";\n          el.className
        = el.className.replace(\" hidden\", \"\");\n          currentSource = el;\n
        \       }\n      }\n    }\n  </script>\n</div>\n\n\n    <h2>\n      Routes\n
        \   </h2>\n\n    <p>\n      Routes match in priority from top to bottom\n
        \   </p>\n\n    \n<table id='route_table' class='route_table'>\n  <thead>\n
        \   <tr>\n      <th>Helper</th>\n      <th>HTTP Verb</th>\n      <th>Path</th>\n
        \     <th>Controller#Action</th>\n    </tr>\n    <tr class='bottom'>\n      <th>\n
        \       <a data-route-helper=\"_path\" title=\"Returns a relative path (without
        the http or domain)\" href=\"#\">Path</a> /\n        <a data-route-helper=\"_url\"
        title=\"Returns an absolute url (with the http and domain)\" href=\"#\">Url</a>\n
        \     </th>\n      <th>\n      </th>\n      <th>\n        <input id=\"search\"
        placeholder=\"Path Match\" type=\"search\" name=\"path[]\" />\n      </th>\n
        \     <th>\n      </th>\n    </tr>\n  </thead>\n  <tbody class='exact_matches'
        id='exact_matches'>\n  </tbody>\n  <tbody class='fuzzy_matches' id='fuzzy_matches'>\n
        \ </tbody>\n  <tbody>\n    <tr class='route_row' data-helper='path'>\n  <td
        data-route-name='api_v1_reader_index'>\n      api_v1_reader_index<span class='helper'>_path</span>\n
        \ </td>\n  <td>\n    POST\n  </td>\n  <td data-route-path='/api/v1/reader(.:format)'>\n
        \   /api/v1/reader(.:format)\n  </td>\n  <td>\n    <p>api/v1/reader#create</p>\n
        \ </td>\n</tr>\n<tr class='route_row' data-helper='path'>\n  <td data-route-name='api_v1_reader'>\n
        \     api_v1_reader<span class='helper'>_path</span>\n  </td>\n  <td>\n    PATCH\n
        \ </td>\n  <td data-route-path='/api/v1/reader/:id(.:format)'>\n    /api/v1/reader/:id(.:format)\n
        \ </td>\n  <td>\n    <p>api/v1/reader#update</p>\n  </td>\n</tr>\n<tr class='route_row'
        data-helper='path'>\n  <td data-route-name=''>\n  </td>\n  <td>\n    PUT\n
        \ </td>\n  <td data-route-path='/api/v1/reader/:id(.:format)'>\n    /api/v1/reader/:id(.:format)\n
        \ </td>\n  <td>\n    <p>api/v1/reader#update</p>\n  </td>\n</tr>\n\n  </tbody>\n</table>\n\n<script
        type='text/javascript'>\n  // support forEarch iterator on NodeList\n  NodeList.prototype.forEach
        = Array.prototype.forEach;\n\n  // Enables path search functionality\n  function
        setupMatchPaths() {\n    // Check if there are any matched results in a section\n
        \   function checkNoMatch(section, noMatchText) {\n      if (section.children.length
        <= 1) {\n        section.innerHTML += noMatchText;\n      }\n    }\n\n    //
        get JSON from url and invoke callback with result\n    function getJSON(url,
        success) {\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', url);\n
        \     xhr.onload = function() {\n        if (this.status == 200)\n          success(JSON.parse(this.response));\n
        \     };\n      xhr.send();\n    }\n\n    function delayedKeyup(input, callback)
        {\n      var timeout;\n      input.onkeyup = function(){\n        if (timeout)
        clearTimeout(timeout);\n        timeout = setTimeout(callback, 300);\n      }\n
        \   }\n\n    // remove params or fragments\n    function sanitizePath(path)
        {\n      return path.replace(/[#?].*/, '');\n    }\n\n    var pathElements
        = document.querySelectorAll('#route_table [data-route-path]'),\n        searchElem
        \  = document.querySelector('#search'),\n        exactSection = document.querySelector('#exact_matches'),\n
        \       fuzzySection = document.querySelector('#fuzzy_matches');\n\n    //
        Remove matches when no search value is present\n    searchElem.onblur = function(e)
        {\n      if (searchElem.value === \"\") {\n        exactSection.innerHTML
        = \"\";\n        fuzzySection.innerHTML = \"\";\n      }\n    }\n\n    //
        On key press perform a search for matching paths\n    delayedKeyup(searchElem,
        function() {\n      var path = sanitizePath(searchElem.value),\n          defaultExactMatch
        = '<tr><th colspan=\"4\">Paths Matching (' + path +'):</th></tr>',\n          defaultFuzzyMatch
        = '<tr><th colspan=\"4\">Paths Containing (' + path +'):</th></tr>',\n          noExactMatch
        \     = '<tr><th colspan=\"4\">No Exact Matches Found</th></tr>',\n          noFuzzyMatch
        \     = '<tr><th colspan=\"4\">No Fuzzy Matches Found</th></tr>';\n\n      if
        (!path)\n        return searchElem.onblur();\n\n      getJSON('/rails/info/routes?path='
        + path, function(matches){\n        // Clear out results section\n        exactSection.innerHTML
        = defaultExactMatch;\n        fuzzySection.innerHTML = defaultFuzzyMatch;\n\n
        \       // Display exact matches and fuzzy matches\n        pathElements.forEach(function(elem)
        {\n          var elemPath = elem.getAttribute('data-route-path');\n\n          if
        (matches['exact'].indexOf(elemPath) != -1)\n            exactSection.appendChild(elem.parentNode.cloneNode(true));\n\n
        \         if (matches['fuzzy'].indexOf(elemPath) != -1)\n            fuzzySection.appendChild(elem.parentNode.cloneNode(true));\n
        \       })\n\n        // Display 'No Matches' message when no matches are
        found\n        checkNoMatch(exactSection, noExactMatch);\n        checkNoMatch(fuzzySection,
        noFuzzyMatch);\n      })\n    })\n  }\n\n  // Enables functionality to toggle
        between `_path` and `_url` helper suffixes\n  function setupRouteToggleHelperLinks()
        {\n\n    // Sets content for each element\n    function setValOn(elems, val)
        {\n      elems.forEach(function(elem) {\n        elem.innerHTML = val;\n      });\n
        \   }\n\n    // Sets onClick event for each element\n    function onClick(elems,
        func) {\n      elems.forEach(function(elem) {\n        elem.onclick = func;\n
        \     });\n    }\n\n    var toggleLinks = document.querySelectorAll('#route_table
        [data-route-helper]');\n\n    onClick(toggleLinks, function(){\n      var
        helperTxt   = this.getAttribute(\"data-route-helper\"),\n          helperElems
        = document.querySelectorAll('[data-route-name] span.helper');\n\n      setValOn(helperElems,
        helperTxt);\n    });\n  }\n\n  setupMatchPaths();\n  setupRouteToggleHelperLinks();\n</script>\n\n\n
        \ \n<h2 style=\"margin-top: 30px\">Request</h2>\n<p><b>Parameters</b>:</p>
        <pre>{&quot;title&quot;=&gt;&quot;test&quot;, &quot;url&quot;=&gt;&quot;http://test.com&quot;}\n</pre>\n\n<div
        class=\"details\">\n  <div class=\"summary\"><a href=\"#\" onclick=\"return
        toggleSessionDump()\">Toggle session dump</a></div>\n  <div id=\"session_dump\"
        style=\"display:none\"><pre></pre></div>\n</div>\n\n<div class=\"details\">\n
        \ <div class=\"summary\"><a href=\"#\" onclick=\"return toggleEnvDump()\">Toggle
        env dump</a></div>\n  <div id=\"env_dump\" style=\"display:none\"><pre>GATEWAY_INTERFACE:
        &quot;CGI/1.2&quot;\nHTTP_ACCEPT: &quot;*/*&quot;\nHTTP_ACCEPT_ENCODING: &quot;gzip;q=1.0,deflate;q=0.6,identity;q=0.3&quot;\nHTTP_VERSION:
        &quot;HTTP/1.1&quot;\nORIGINAL_SCRIPT_NAME: &quot;&quot;\nREMOTE_ADDR: &quot;127.0.0.1&quot;\nSERVER_NAME:
        &quot;127.0.0.1&quot;\nSERVER_PROTOCOL: &quot;HTTP/1.1&quot;</pre></div>\n</div>\n\n<h2
        style=\"margin-top: 30px\">Response</h2>\n<p><b>Headers</b>:</p> <pre>None</pre>\n\n</div>\n\n\n<div
        id=\"console\"\n  data-mount-point='/__web_console'\n  data-session-id='4f58535aa0f6bf4c7a914d267225e033'\n
        \ data-prompt-label='>> '>\n</div>\n\n\n<script type=\"text/javascript\" data-template=\"console\">\n(function()
        {\n  /**\n * Constructor for command storage.\n * It uses localStorage if
        available. Otherwise fallback to normal JS array.\n */\nfunction CommandStorage()
        {\n  this.previousCommands = [];\n  var previousCommandOffset = 0;\n  var
        hasLocalStorage = typeof window.localStorage !== 'undefined';\n  var STORAGE_KEY
        = \"web_console_previous_commands\";\n  var MAX_STORAGE = 100;\n\n  if (hasLocalStorage)
        {\n    this.previousCommands = JSON.parse(localStorage.getItem(STORAGE_KEY))
        || [];\n    previousCommandOffset = this.previousCommands.length;\n  }\n\n
        \ this.addCommand = function(command) {\n    previousCommandOffset = this.previousCommands.push(command);\n\n
        \   if (previousCommandOffset > MAX_STORAGE) {\n      this.previousCommands.splice(0,
        1);\n      previousCommandOffset = MAX_STORAGE;\n    }\n\n    if (hasLocalStorage)
        {\n      localStorage.setItem(STORAGE_KEY, JSON.stringify(this.previousCommands));\n
        \   }\n  };\n\n  this.navigate = function(offset) {\n    previousCommandOffset
        += offset;\n\n    if (previousCommandOffset < 0) {\n      previousCommandOffset
        = -1;\n      return null;\n    }\n\n    if (previousCommandOffset >= this.previousCommands.length)
        {\n      previousCommandOffset = this.previousCommands.length;\n      return
        null;\n    }\n\n    return this.previousCommands[previousCommandOffset];\n
        \ }\n}\n\nfunction Autocomplete(_words, prefix) {\n  this.words = prepareWords(_words);\n
        \ this.current = -1;\n  this.left = 0; // [left, right)\n  this.right = this.words.length;\n
        \ this.confirmed = false;\n\n  function createSpan(label, className) {\n    var
        el = document.createElement('span');\n    addClass(el, className);\n    el.innerText
        = label;\n    return el;\n  }\n\n  function prepareWords(words) {\n    //
        convert into an object with priority and element\n    var res = new Array(words.length);\n
        \   for (var i = 0, ind = 0; i < words.length; ++i) {\n      res[i] = new
        Array(words[i].length);\n      for (var j = 0; j < words[i].length; ++j) {\n
        \       res[i][j] = {\n          word: words[i][j],\n          priority: i,\n
        \         element: createSpan(words[i][j], 'trimmed keyword')\n        };\n
        \     }\n    }\n    // flatten and sort by alphabetical order to refine incrementally\n
        \   res = flatten(res);\n    res.sort(function(a, b) { return a.word == b.word
        ? 0 : (a.word < b.word ? -1 : 1); });\n    for (var i = 0; i < res.length;
        ++i) res[i].element.dataset.index = i;\n    return res;\n  }\n\n  this.view
        = document.createElement('pre');\n  addClass(this.view, 'auto-complete console-message');\n
        \ this.view.appendChild(this.prefix = createSpan('...', 'trimmed keyword'));\n
        \ this.view.appendChild(this.stage = document.createElement('span'));\n  this.elements
        = this.stage.children;\n  this.view.appendChild(this.suffix = createSpan('...',
        'trimmed keyword'));\n\n  this.refine(prefix || '');\n}\n\nAutocomplete.prototype.getSelectedWord
        = function() {\n  return this.lastSelected && this.lastSelected.innerText;\n};\n\nAutocomplete.prototype.onFinished
        = function(callback) {\n  this.onFinishedCallback = callback;\n  if (this.confirmed)
        callback(this.confirmed);\n};\n\nAutocomplete.prototype.onKeyDown = function(ev)
        {\n  var self = this;\n  if (!this.elements.length) return;\n\n  function
        move(nextCurrent) {\n    if (self.lastSelected) removeClass(self.lastSelected,
        'selected');\n    addClass(self.lastSelected = self.elements[nextCurrent],
        'selected');\n    self.trim(self.current, true);\n    self.trim(nextCurrent,
        false);\n    self.current = nextCurrent;\n  }\n\n  switch (ev.keyCode) {\n
        \   case 69:\n      if (ev.ctrlKey) {\n        move(this.current + 1 >= this.elements.length
        ? 0 : this.current + 1);\n        return true;\n      }\n      return false;\n
        \   case 9: // Tab\n      if (ev.shiftKey) { // move back\n        move(this.current
        - 1 < 0 ? this.elements.length - 1 : this.current - 1);\n      } else { //
        move next\n        move(this.current + 1 >= this.elements.length ? 0 : this.current
        + 1);\n      }\n      return true;\n    case 13: // Enter\n      this.finish();\n
        \     return true;\n    case 27: // Esc\n      this.cancel();\n      return
        true;\n    case 37: case 38: case 39: case 40: // disable using arrow keys
        on completing\n      return true;\n  }\n\n  return false;\n};\n\nAutocomplete.prototype.trim
        = function(from, needToTrim) {\n  var self = this;\n  var num = 5;\n\n  if
        (this.elements.length > num) {\n    (0 < from ? removeClass : addClass)(this.prefix,
        'trimmed');\n    (from + num < this.elements.length ? removeClass : addClass)(this.suffix,
        'trimmed');\n  } else {\n    addClass(this.prefix, 'trimmed');\n    addClass(this.suffix,
        'trimmed');\n  }\n\n  function iterate(x) {\n    for (var i = 0; i < num;
        ++i, ++x) if (0 <= x && x < self.elements.length) {\n      toggleClass(self.elements[x],
        'trimmed');\n    }\n  }\n\n  var toggleClass = needToTrim ? addClass : removeClass;\n
        \ if (from < 0) {\n    iterate(0);\n  } else if (from + num - 1 >= this.elements.length)
        {\n    iterate(this.elements.length - num);\n  } else {\n    iterate(from);\n
        \ }\n};\n\nAutocomplete.prototype.refine = function(prefix) {\n  if (this.confirmed)
        return;\n  var inc = !this.prev || (prefix.length >= this.prev.length);\n
        \ this.prev = prefix;\n  var self = this;\n\n  function remove(parent, child)
        {\n    if (parent == child.parentNode) parent.removeChild(child);\n  }\n\n
        \ function toggle(el) {\n    return inc ? remove(self.stage, el) : self.stage.appendChild(el);\n
        \ }\n\n  function startsWith(str, prefix) {\n    return !prefix || str.substr(0,
        prefix.length) === prefix;\n  }\n\n  function moveRight(l, r) {\n    while
        (l < r && inc !== startsWith(self.words[l].word, prefix)) toggle(self.words[l++].element);\n
        \   return l;\n  }\n\n  function moveLeft(l, r) {\n    while (l < r - 1 &&
        inc !== startsWith(self.words[r-1].word, prefix)) toggle(self.words[--r].element);\n
        \   return r;\n  }\n\n  self.trim(self.current, true); // reset trimming\n\n
        \ // Refine the range of words having same prefix\n  if (inc) {\n    self.left
        = moveRight(self.left, self.right);\n    self.right = moveLeft(self.left,
        self.right);\n  } else {\n    self.left = moveLeft(-1, self.left);\n    self.right
        = moveRight(self.right, self.words.length);\n  }\n\n  // Render elements with
        sorting by scope groups\n  var words = this.words.slice(this.left, this.right);\n
        \ words.sort(function(a, b) { return a.priority == b.priority ? (a.word <
        b.word ? -1 : 1) : (a.priority < b.priority ? -1 : 1); });\n  removeAllChildren(this.elements);\n
        \ for (var i = 0; i < words.length; ++i) {\n    this.stage.appendChild(words[i].element);\n
        \ }\n\n  // Keep a previous selected element if the refined range includes
        the element\n  if (this.lastSelected && this.left <= this.lastSelected.dataset.index
        && this.lastSelected.dataset.index < this.right) {\n    this.current = Array.prototype.indexOf.call(this.elements,
        this.lastSelected);\n    this.trim(this.current, false);\n  } else {\n    if
        (this.lastSelected) removeClass(this.lastSelected, 'selected');\n    this.lastSelected
        = null;\n    this.current = -1;\n    this.trim(0, false);\n  }\n\n  if (self.left
        + 1 == self.right) {\n    self.current = 0;\n    self.finish();\n  } else
        if (self.left == self.right) {\n    self.cancel();\n  }\n};\n\nAutocomplete.prototype.finish
        = function() {\n  if (0 <= this.current && this.current < this.elements.length)
        {\n    this.confirmed = this.elements[this.current].innerText;\n    if (this.onFinishedCallback)
        this.onFinishedCallback(this.confirmed);\n    this.removeView();\n  } else
        {\n    this.cancel();\n  }\n};\n\nAutocomplete.prototype.cancel = function()
        {\n  if (this.onFinishedCallback) this.onFinishedCallback();\n  this.removeView();\n};\n\nAutocomplete.prototype.removeView
        = function() {\n  if (this.view.parentNode) this.view.parentNode.removeChild(this.view);\n
        \ removeAllChildren(this.view);\n}\n\n// HTML strings for dynamic elements.\nvar
        consoleInnerHtml = \"<div class=\\'resizer layer\\'><\\/div>\\n<div class=\\'console-outer
        layer\\'>\\n  <div class=\\'console-actions\\'>\\n    <div class=\\'close-button
        button\\' title=\\'close\\'>x<\\/div>\\n  <\\/div>\\n  <div class=\\'console-inner\\'><\\/div>\\n<\\/div>\\n<input
        class=\\'clipboard\\' type=\\'text\\'>\\n\"\n;\nvar promptBoxHtml = \"<span
        class=\\'console-prompt-label\\'><\\/span>\\n<pre class=\\'console-prompt-display\\'><\\/pre>\\n\"\n;\n//
        CSS\nvar consoleStyleCss = \".console .pos-absolute { position: absolute;
        }\\n.console .pos-fixed { position: fixed; }\\n.console .pos-right { right:
        0; }\\n.console .border-box { box-sizing: border-box; }\\n.console .layer
        { width: 100%; height: 100%; }\\n.console .layer.console-outer { z-index:
        1; }\\n.console .layer.resizer { z-index: 2; }\\n.console { position: fixed;
        left: 0; bottom: 0; width: 100%; height: 148px; padding: 0; margin: 0; background:
        none repeat scroll 0% 0% #333; z-index: 9999; }\\n.console .console-outer
        { overflow: auto; padding-top: 4px; }\\n.console .console-inner { font-family:
        monospace; font-size: 11px; width: 100%; height: 100%; overflow: none; background:
        #333; }\\n.console .console-prompt-box { color: #FFF; }\\n.console .console-message
        { color: #1AD027; margin: 0; border: 0; white-space: pre-wrap; background-color:
        #333; padding: 0; }\\n.console .console-message.error-message { color: #fc9;
        }\\n.console .console-message.auto-complete { word-break: break-all; }\\n.console
        .console-message.auto-complete .keyword { margin-right: 11px; }\\n.console
        .console-message.auto-complete .keyword.selected { background: #FFF; color:
        #000; }\\n.console .console-message.auto-complete .hidden { display: none;
        }\\n.console .console-message.auto-complete .trimmed { display: none; }\\n.console
        .console-hint { color: #096; }\\n.console .console-focus .console-cursor {
        background: #FEFEFE; color: #333; font-weight: bold; }\\n.console .resizer
        { background: #333; width: 100%; height: 4px; cursor: ns-resize; }\\n.console
        .console-actions { padding-right: 3px; }\\n.console .console-actions .button
        { float: left; }\\n.console .button { cursor: pointer; border-radius: 1px;
        font-family: monospace; font-size: 13px; width: 14px; height: 14px; line-height:
        14px; text-align: center; color: #ccc; }\\n.console .button:hover { background:
        #666; color: #fff; }\\n.console .button.close-button:hover { background: #966;
        }\\n.console .clipboard { height: 0px; padding: 0px; margin: 0px; width: 0px;
        margin-left: -1000px; }\\n.console .console-prompt-label { display: inline;
        color: #FFF; background: none repeat scroll 0% 0% #333; border: 0; padding:
        0; }\\n.console .console-prompt-display { display: inline; color: #FFF; background:
        none repeat scroll 0% 0% #333; border: 0; padding: 0; }\\n.console.full-screen
        { height: 100%; }\\n.console.full-screen .console-outer { padding-top: 3px;
        }\\n.console.full-screen .resizer { display: none; }\\n.console.full-screen
        .close-button { display: none; }\\n\"\n;\n// Insert a style element with the
        unique ID\nvar styleElementId = 'sr02459pvbvrmhco';\n\n// REPLConsole Constructor\nfunction
        REPLConsole(config) {\n  function getConfig(key, defaultValue) {\n    return
        config && config[key] || defaultValue;\n  }\n\n  this.commandStorage = new
        CommandStorage();\n  this.prompt = getConfig('promptLabel', ' >>');\n  this.mountPoint
        = getConfig('mountPoint');\n  this.sessionId = getConfig('sessionId');\n  this.autocomplete
        = false;\n}\n\nREPLConsole.prototype.getSessionUrl = function(path) {\n  var
        parts = [ this.mountPoint, 'repl_sessions', this.sessionId ];\n  if (path)
        {\n    parts.push(path);\n  }\n  // Join and remove duplicate slashes.\n  return
        parts.join('/').replace(/([^:]\\/)\\/+/g, '$1');\n};\n\nREPLConsole.prototype.contextRequest
        = function(keyword, callback) {\n  putRequest(this.getSessionUrl(), 'context='
        + getContext(keyword), function(xhr) {\n    if (xhr.status == 200) {\n      callback(null,
        JSON.parse(xhr.responseText));\n    } else {\n      callback(xhr.statusText);\n
        \   }\n  });\n};\n\nREPLConsole.prototype.commandHandle = function(line, callback)
        {\n  var self = this;\n  var params = 'input=' + encodeURIComponent(line);\n
        \ callback = callback || function() {};\n\n  function isSuccess(status) {\n
        \   return status >= 200 && status < 300 || status === 304;\n  }\n\n  function
        parseJSON(text) {\n    try {\n      return JSON.parse(text);\n    } catch
        (e) {\n      return null;\n    }\n  }\n\n  function getErrorText(xhr) {\n
        \   if (!xhr.status) {\n      return \"Connection Refused\";\n    } else {\n
        \     return xhr.status + ' ' + xhr.statusText;\n    }\n  }\n\n  putRequest(self.getSessionUrl(),
        params, function(xhr) {\n    var response = parseJSON(xhr.responseText);\n
        \   var result   = isSuccess(xhr.status);\n    if (result) {\n      self.writeOutput(response.output);\n
        \   } else {\n      if (response && response.output) {\n        self.writeError(response.output);\n
        \     } else {\n        self.writeError(getErrorText(xhr));\n      }\n    }\n
        \   callback(result, response);\n  });\n};\n\nREPLConsole.prototype.uninstall
        = function() {\n  this.container.parentNode.removeChild(this.container);\n};\n\nREPLConsole.prototype.install
        = function(container) {\n  var _this = this;\n\n  document.onkeydown = function(ev)
        {\n    if (_this.focused) { _this.onKeyDown(ev); }\n  };\n\n  document.onkeypress
        = function(ev) {\n    if (_this.focused) { _this.onKeyPress(ev); }\n  };\n\n
        \ document.addEventListener('mousedown', function(ev) {\n    var el = ev.target
        || ev.srcElement;\n\n    if (el) {\n      do {\n        if (el === container)
        {\n          _this.focus();\n          return;\n        }\n      } while (el
        = el.parentNode);\n\n      _this.blur();\n    }\n  });\n\n  // Render the
        console.\n  container.innerHTML = consoleInnerHtml;\n\n  var consoleOuter
        = findChild(container, 'console-outer');\n  var consoleActions = findChild(consoleOuter,
        'console-actions');\n\n  addClass(container, 'console');\n  addClass(container.getElementsByClassName('layer'),
        'pos-absolute border-box');\n  addClass(container.getElementsByClassName('button'),
        'border-box');\n  addClass(consoleActions, 'pos-fixed pos-right');\n\n  //
        Make the console resizable.\n  function resizeContainer(ev) {\n    var startY
        \             = ev.clientY;\n    var startHeight         = parseInt(document.defaultView.getComputedStyle(container).height,
        10);\n    var scrollTopStart      = consoleOuter.scrollTop;\n    var clientHeightStart
        \  = consoleOuter.clientHeight;\n\n    var doDrag = function(e) {\n      container.style.height
        = (startHeight + startY - e.clientY) + 'px';\n      consoleOuter.scrollTop
        = scrollTopStart + (clientHeightStart - consoleOuter.clientHeight);\n      shiftConsoleActions();\n
        \   };\n\n    var stopDrag = function(e) {\n      document.documentElement.removeEventListener('mousemove',
        doDrag, false);\n      document.documentElement.removeEventListener('mouseup',
        stopDrag, false);\n    };\n\n    document.documentElement.addEventListener('mousemove',
        doDrag, false);\n    document.documentElement.addEventListener('mouseup',
        stopDrag, false);\n  }\n\n  function closeContainer(ev) {\n    container.parentNode.removeChild(container);\n
        \ }\n\n  var shifted = false;\n  function shiftConsoleActions() {\n    if
        (consoleOuter.scrollHeight > consoleOuter.clientHeight) {\n      var widthDiff
        = document.documentElement.clientWidth - consoleOuter.clientWidth;\n      if
        (shifted || ! widthDiff) return;\n      shifted = true;\n      consoleActions.style.marginRight
        = widthDiff + 'px';\n    } else if (shifted) {\n      shifted = false;\n      consoleActions.style.marginRight
        = '0px';\n    }\n  }\n\n  // Initialize\n  this.container = container;\n  this.outer
        = consoleOuter;\n  this.inner = findChild(this.outer, 'console-inner');\n
        \ this.clipboard = findChild(container, 'clipboard');\n  this.suggestWait
        = 1500;\n  this.newPromptBox();\n  this.insertCss();\n\n  findChild(container,
        'resizer').addEventListener('mousedown', resizeContainer);\n  findChild(consoleActions,
        'close-button').addEventListener('click', closeContainer);\n  consoleOuter.addEventListener('DOMNodeInserted',
        shiftConsoleActions);\n\n  REPLConsole.currentSession = this;\n};\n\n// Add
        CSS styles dynamically. This probably doesnt work for IE <8.\nREPLConsole.prototype.insertCss
        = function() {\n  if (document.getElementById(styleElementId)) {\n    return;
        // already inserted\n  }\n  var style = document.createElement('style');\n
        \ style.type = 'text/css';\n  style.innerHTML = consoleStyleCss;\n  style.id
        = styleElementId;\n  document.getElementsByTagName('head')[0].appendChild(style);\n};\n\nREPLConsole.prototype.focus
        = function() {\n  if (! this.focused) {\n    this.focused = true;\n    if
        (! hasClass(this.inner, \"console-focus\")) {\n      addClass(this.inner,
        \"console-focus\");\n    }\n    this.scrollToBottom();\n  }\n};\n\nREPLConsole.prototype.blur
        = function() {\n  this.focused = false;\n  removeClass(this.inner, \"console-focus\");\n};\n\n/**\n
        * Add a new empty prompt box to the console.\n */\nREPLConsole.prototype.newPromptBox
        = function() {\n  // Remove the caret from previous prompt display if any.\n
        \ if (this.promptDisplay) {\n    this.removeCaretFromPrompt();\n  }\n\n  var
        promptBox = document.createElement('div');\n  promptBox.className = \"console-prompt-box\";\n
        \ promptBox.innerHTML = promptBoxHtml;\n  this.promptLabel = promptBox.getElementsByClassName('console-prompt-label')[0];\n
        \ this.promptDisplay = promptBox.getElementsByClassName('console-prompt-display')[0];\n
        \ // Render the prompt box\n  this.setInput(\"\");\n  this.promptLabel.innerHTML
        = this.prompt;\n  this.inner.appendChild(promptBox);\n  this.scrollToBottom();\n};\n\n/**\n
        * Remove the caret from the prompt box,\n * mainly before adding a new prompt
        box.\n * For simplicity, just re-render the prompt box\n * with caret position
        -1.\n */\nREPLConsole.prototype.removeCaretFromPrompt = function() {\n  this.setInput(this._input,
        -1);\n};\n\nREPLConsole.prototype.getSuggestion = function(keyword) {\n  var
        self = this;\n\n  function show(found) {\n    if (!found) return;\n    var
        hint = self.promptDisplay.childNodes[1];\n    hint.className = 'console-hint';\n
        \   hint.dataset.keyword = found;\n    hint.innerText = found.substr(self.suggestKeyword.length);\n
        \   // clear hinting information after timeout in a few time \n    if (self.suggestTimeout)
        clearTimeout(self.suggestTimeout);\n    self.suggestTimeout = setTimeout(function()
        { self.renderInput() }, self.suggestWait);\n  }\n\n  function find(context)
        {\n    var k = self.suggestKeyword;\n    for (var i = 0; i < context.length;
        ++i) if (context[i].substr(0, k.length) === k) {\n      if (context[i] ===
        k) return;\n      return context[i];\n    }\n  }\n\n  function request(keyword,
        callback) {\n    self.contextRequest(keyword, function(err, res) {\n      if
        (err) throw new Error(err);\n      var c = flatten(res['context']);\n      c.sort();\n
        \     callback(c);\n    });\n  }\n\n  self.suggestKeyword = keyword;\n  var
        input = getContext(keyword);\n  if (keyword.length - input.length < 3) return;\n\n
        \ if (self.suggestInput !== input) {\n    self.suggestInput = input;\n    request(keyword,
        function(c) {\n      show(find(self.suggestContext = c));\n    });\n  } else
        if (self.suggestContext) {\n    show(find(self.suggestContext));\n  }\n};\n\nREPLConsole.prototype.getHintKeyword
        = function() {\n  var hint = this.promptDisplay.childNodes[1];\n  return hint.className
        === 'console-hint' && hint.dataset.keyword;\n};\n\nREPLConsole.prototype.setInput
        = function(input, caretPos) {\n  if (input == null) return; // keep value
        if input is undefined\n  this._caretPos = caretPos === undefined ? input.length
        : caretPos;\n  this._input = input;\n  if (this.autocomplete) this.autocomplete.refine(this.getCurrentWord());\n
        \ this.renderInput();\n  if (!this.autocomplete && input.length == this._caretPos)
        this.getSuggestion(this.getCurrentWord());\n};\n\n/**\n * Add some text to
        the existing input.\n */\nREPLConsole.prototype.addToInput = function(val,
        caretPos) {\n  caretPos = caretPos || this._caretPos;\n  var before = this._input.substring(0,
        caretPos);\n  var after = this._input.substring(caretPos, this._input.length);\n
        \ var newInput =  before + val + after;\n  this.setInput(newInput, caretPos
        + val.length);\n};\n\n/**\n * Render the input prompt. This is called whenever\n
        * the user input changes, sometimes not very efficient.\n */\nREPLConsole.prototype.renderInput
        = function() {\n  // Clear the current input.\n  removeAllChildren(this.promptDisplay);\n\n
        \ var before, current, after;\n  var center = document.createElement('span');\n\n
        \ if (this._caretPos < 0) {\n    before = this._input;\n    current = after
        = \"\";\n  } else if (this._caretPos === this._input.length) {\n    before
        = this._input;\n    current = \"\\u00A0\";\n    after = \"\";\n  } else {\n
        \   before = this._input.substring(0, this._caretPos);\n    current = this._input.charAt(this._caretPos);\n
        \   after = this._input.substring(this._caretPos + 1, this._input.length);\n
        \ }\n\n  this.promptDisplay.appendChild(document.createTextNode(before));\n
        \ this.promptDisplay.appendChild(center);\n  this.promptDisplay.appendChild(document.createTextNode(after));\n\n
        \ var hint = this.autocomplete && this.autocomplete.getSelectedWord();\n  addClass(center,
        hint ? 'console-hint' : 'console-cursor');\n  center.appendChild(document.createTextNode(hint
        ? hint.substr(this.getCurrentWord().length) : current));\n};\n\nREPLConsole.prototype.writeOutput
        = function(output) {\n  var consoleMessage = document.createElement('pre');\n
        \ consoleMessage.className = \"console-message\";\n  consoleMessage.innerHTML
        = escapeHTML(output);\n  this.inner.appendChild(consoleMessage);\n  this.newPromptBox();\n
        \ return consoleMessage;\n};\n\nREPLConsole.prototype.writeError = function(output)
        {\n  var consoleMessage = this.writeOutput(output);\n  addClass(consoleMessage,
        \"error-message\");\n  return consoleMessage;\n};\n\nREPLConsole.prototype.onEnterKey
        = function() {\n  var input = this._input;\n\n  if(input != \"\" && input
        !== undefined) {\n    this.commandStorage.addCommand(input);\n  }\n\n  this.commandHandle(input);\n};\n\nREPLConsole.prototype.onTabKey
        = function() {\n  var self = this;\n\n  var hintKeyword;\n  if (hintKeyword
        = self.getHintKeyword()) {\n    self.swapCurrentWord(hintKeyword);\n    return;\n
        \ }\n\n  if (self.autocomplete) return;\n  self.autocomplete = new Autocomplete([]);\n\n
        \ self.contextRequest(self.getCurrentWord(), function(err, obj) {\n    if
        (err) return self.autocomplete = false;\n    self.autocomplete = new Autocomplete(obj['context'],
        self.getCurrentWord());\n    self.inner.appendChild(self.autocomplete.view);\n
        \   self.autocomplete.onFinished(function(word) {\n      self.swapCurrentWord(word);\n
        \     self.autocomplete = false;\n    });\n    self.scrollToBottom();\n  });\n};\n\nREPLConsole.prototype.onNavigateHistory
        = function(offset) {\n  var command = this.commandStorage.navigate(offset)
        || \"\";\n  this.setInput(command);\n};\n\n/**\n * Handle control keys like
        up, down, left, right.\n */\nREPLConsole.prototype.onKeyDown = function(ev)
        {\n  if (this.autocomplete && this.autocomplete.onKeyDown(ev)) {\n    this.renderInput();\n
        \   ev.preventDefault();\n    ev.stopPropagation();\n    return;\n  }\n\n
        \ switch (ev.keyCode) {\n    case 69:\n      // Ctrl-E\n      if (ev.ctrlKey)
        {\n        this.onTabKey();\n        ev.preventDefault();\n      }\n      break;\n
        \   case 9:\n      // Tab\n      this.onTabKey();\n      ev.preventDefault();\n
        \     break;\n    case 13:\n      // Enter key\n      this.onEnterKey();\n
        \     ev.preventDefault();\n      break;\n    case 80:\n      // Ctrl-P\n
        \     if (! ev.ctrlKey) break;\n    case 38:\n      // Up arrow\n      this.onNavigateHistory(-1);\n
        \     ev.preventDefault();\n      break;\n    case 78:\n      // Ctrl-N\n
        \     if (! ev.ctrlKey) break;\n    case 40:\n      // Down arrow\n      this.onNavigateHistory(1);\n
        \     ev.preventDefault();\n      break;\n    case 37:\n      // Left arrow\n
        \     var caretPos = this._caretPos > 0 ? this._caretPos - 1 : this._caretPos;\n
        \     this.setInput(this._input, caretPos);\n      ev.preventDefault();\n
        \     break;\n    case 39:\n      // Right arrow\n      var length = this._input.length;\n
        \     var caretPos = this._caretPos < length ? this._caretPos + 1 : this._caretPos;\n
        \     this.setInput(this._input, caretPos);\n      ev.preventDefault();\n
        \     break;\n    case 8:\n      // Delete\n      this.deleteAtCurrent();\n
        \     ev.preventDefault();\n      break;\n    default:\n      break;\n  }\n\n
        \ if (ev.ctrlKey || ev.metaKey) {\n    // Set focus to our clipboard in case
        they hit the \"v\" key\n    this.clipboard.focus();\n    if (ev.keyCode ==
        86) {\n      // Pasting to clipboard doesn't happen immediately,\n      //
        so we have to wait for a while to get the pasted text.\n      var _this =
        this;\n      setTimeout(function() {\n        _this.addToInput(_this.clipboard.value);\n
        \       _this.clipboard.value = \"\";\n        _this.clipboard.blur();\n      },
        10);\n    }\n  }\n\n  ev.stopPropagation();\n};\n\n/**\n * Handle input key
        press.\n */\nREPLConsole.prototype.onKeyPress = function(ev) {\n  // Only
        write to the console if it's a single key press.\n  if (ev.ctrlKey || ev.metaKey)
        { return; }\n  var keyCode = ev.keyCode || ev.which;\n  this.insertAtCurrent(String.fromCharCode(keyCode));\n
        \ ev.stopPropagation();\n  ev.preventDefault();\n};\n\n/**\n * Delete a character
        at the current position.\n */\nREPLConsole.prototype.deleteAtCurrent = function()
        {\n  if (this._caretPos > 0) {\n    var caretPos = this._caretPos - 1;\n    var
        before = this._input.substring(0, caretPos);\n    var after = this._input.substring(this._caretPos,
        this._input.length);\n    this.setInput(before + after, caretPos);\n\n    if
        (!this._input) {\n      this.autocomplete && this.autocomplete.cancel();\n
        \     this.autocomplete = false;\n    }\n  }\n};\n\n/**\n * Insert a character
        at the current position.\n */\nREPLConsole.prototype.insertAtCurrent = function(char)
        {\n  var before = this._input.substring(0, this._caretPos);\n  var after =
        this._input.substring(this._caretPos, this._input.length);\n  this.setInput(before
        + char + after, this._caretPos + 1);\n};\n\nREPLConsole.prototype.swapCurrentWord
        = function(next) {\n  function right(s, pos) {\n    var x = s.indexOf(' ',
        pos);\n    return x === -1 ? s.length : x;\n  }\n\n  function swap(s, pos)
        {\n    return s.substr(0, s.lastIndexOf(' ', pos) + 1) + next + s.substr(right(s,
        pos))\n  }\n\n  if (!next) return;\n  var swapped = swap(this._input, this._caretPos);\n
        \ this.setInput(swapped, this._caretPos + swapped.length - this._input.length);\n};\n\nREPLConsole.prototype.getCurrentWord
        = function() {\n  return (function(s, pos) {\n    var left = s.lastIndexOf('
        ', pos);\n    if (left === -1) left = 0;\n    var right = s.indexOf(' ', pos)\n
        \   if (right === -1) right = s.length - 1;\n    return s.substr(left, right
        - left + 1).replace(/^\\s+|\\s+$/g,'');\n  })(this._input, this._caretPos);\n};\n\nREPLConsole.prototype.scrollToBottom
        = function() {\n  this.outer.scrollTop = this.outer.scrollHeight;\n};\n\n//
        Change the binding of the console\nREPLConsole.prototype.switchBindingTo =
        function(frameId, callback) {\n  var url = this.getSessionUrl('trace');\n
        \ var params = \"frame_id=\" + encodeURIComponent(frameId);\n  postRequest(url,
        params, callback);\n};\n\n/**\n * Install the console into the element with
        a specific ID.\n * Example: REPLConsole.installInto(\"target-id\")\n */\nREPLConsole.installInto
        = function(id, options) {\n  var consoleElement = document.getElementById(id);\n\n
        \ options = options || {};\n\n  for (var prop in consoleElement.dataset) {\n
        \   options[prop] = options[prop] || consoleElement.dataset[prop];\n  }\n\n
        \ var replConsole = new REPLConsole(options);\n  replConsole.install(consoleElement);\n
        \ return replConsole;\n};\n\n// This is to store the latest single session,
        and the stored session\n// is updated by the REPLConsole#install() method.\n//
        It allows to operate the current session from the other scripts.\nREPLConsole.currentSession
        = null;\n\n// This line is for the Firefox Add-on, because it doesn't have
        XMLHttpRequest as default.\n// And so we need to require a module compatible
        with XMLHttpRequest from SDK.\nREPLConsole.XMLHttpRequest = typeof XMLHttpRequest
        === 'undefined' ? null : XMLHttpRequest;\n\nREPLConsole.request = function
        request(method, url, params, callback) {\n  var xhr = new REPLConsole.XMLHttpRequest();\n\n
        \ xhr.open(method, url, true);\n  xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n
        \ xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n  xhr.setRequestHeader(\"Accept\",
        \"application/vnd.web-console.v2\");\n  xhr.send(params);\n\n  xhr.onreadystatechange
        = function() {\n    if (xhr.readyState === 4) {\n      callback(xhr);\n    }\n
        \ };\n};\n\n// DOM helpers\nfunction hasClass(el, className) {\n  var regex
        = new RegExp('(?:^|\\\\s)' + className + '(?!\\\\S)', 'g');\n  return el.className
        && el.className.match(regex);\n}\n\nfunction isNodeList(el) {\n  return typeof
        el.length === 'number' &&\n    typeof el.item === 'function';\n}\n\nfunction
        addClass(el, className) {\n  if (isNodeList(el)) {\n    for (var i = 0; i
        < el.length; ++ i) {\n      addClass(el[i], className);\n    }\n  } else if
        (!hasClass(el, className)) {\n    el.className += \" \" + className;\n  }\n}\n\nfunction
        removeClass(el, className) {\n  var regex = new RegExp('(?:^|\\\\s)' + className
        + '(?!\\\\S)', 'g');\n  el.className = el.className.replace(regex, '');\n}\n\nfunction
        removeAllChildren(el) {\n  while (el.firstChild) {\n    el.removeChild(el.firstChild);\n
        \ }\n}\n\nfunction findChild(el, className) {\n  for (var i = 0; i < el.childNodes.length;
        ++ i) {\n    if (hasClass(el.childNodes[i], className)) {\n      return el.childNodes[i];\n
        \   }\n  }\n}\n\nfunction escapeHTML(html) {\n  return html\n    .replace(/&/g,
        '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g,
        '&quot;')\n    .replace(/'/g, '&#x27;')\n    .replace(/`/g, '&#x60;');\n}\n\n//
        XHR helpers\nfunction postRequest() {\n  REPLConsole.request.apply(this, [\"POST\"].concat([].slice.call(arguments)));\n}\n\nfunction
        putRequest() {\n  REPLConsole.request.apply(this, [\"PUT\"].concat([].slice.call(arguments)));\n}\n\nif
        (typeof exports === 'object') {\n  exports.REPLConsole = REPLConsole;\n} else
        {\n  window.REPLConsole = REPLConsole;\n}\n\n// Split string by module operators
        of ruby\nfunction getContext(s) {\n  var methodOp = s.lastIndexOf('.');\n
        \ var moduleOp = s.lastIndexOf('::');\n  var x = methodOp > moduleOp ? methodOp
        : moduleOp;\n  return x !== -1 ? s.substr(0, x) : '';\n}\n\nfunction flatten(arrays)
        {\n  return Array.prototype.concat.apply([], arrays);\n}\n\n}).call(this);\n</script>\n\n<script
        type=\"text/javascript\" data-template=\"main\">\n(function() {\n  REPLConsole.installInto('console');\n\n}).call(this);\n</script>\n\n\n
        \ <script type=\"text/javascript\" data-template=\"error_page\">\n(function()
        {\n  // Try intercept traces links in Rails 4.2.\nvar traceFrames = document.getElementsByClassName('trace-frames');\nvar
        selectedFrame, currentSource = document.getElementById('frame-source-0');\n\n//
        Add click listeners for all stack frames\nfor (var i = 0; i < traceFrames.length;
        i++) {\n  traceFrames[i].addEventListener('click', function(e) {\n    e.preventDefault();\n
        \   var target = e.target;\n    var frameId = target.dataset.frameId;\n\n
        \   // Change the binding of the console.\n    changeBinding(frameId, function()
        {\n      if (selectedFrame) {\n        selectedFrame.className = selectedFrame.className.replace(\"selected\",
        \"\");\n      }\n\n      target.className += \" selected\";\n      selectedFrame
        = target;\n    });\n\n    // Change the extracted source code\n    changeSourceExtract(frameId);\n
        \ });\n}\n\nfunction changeBinding(frameId, callback) {\n  REPLConsole.currentSession.switchBindingTo(frameId,
        callback);\n}\n\nfunction changeSourceExtract(frameId) {\n  var el = document.getElementById('frame-source-'
        + frameId);\n  if (currentSource && el) {\n    currentSource.className +=
        \" hidden\";\n    el.className = el.className.replace(\" hidden\", \"\");\n
        \   currentSource = el;\n  }\n}\n\n// Push the error page body upwards the
        size of the console.\n//\n// While, I wouldn't like to do that on every custom
        page (so I don't screw\n// user's layouts), I think a lot of developers want
        to see all of the content\n// on the default Rails error page.\n//\n// Since
        it's quite special as is now, being a bit more special in the name of\n//
        better user experience, won't hurt.\ndocument.addEventListener('DOMContentLoaded',
        function() {\n  var consoleElement = document.getElementById('console');\n
        \ var resizerElement = consoleElement.getElementsByClassName('resizer')[0];\n
        \ var containerElement = document.getElementById('container');\n\n  function
        setContainerElementBottomMargin(pixels) {\n    containerElement.style.marginBottom
        = pixels + 'px';\n  }\n\n  var currentConsoleElementHeight = consoleElement.offsetHeight;\n
        \ setContainerElementBottomMargin(currentConsoleElementHeight);\n\n  resizerElement.addEventListener('mousedown',
        function(event) {\n    function recordConsoleElementHeight(event) {\n      resizerElement.removeEventListener('mouseup',
        recordConsoleElementHeight);\n\n      var currentConsoleElementHeight = consoleElement.offsetHeight;\n
        \     setContainerElementBottomMargin(currentConsoleElementHeight);\n    }\n\n
        \   resizerElement.addEventListener('mouseup', recordConsoleElementHeight);\n
        \ });\n});\n\n}).call(this);\n</script>\n\n</body>\n</html>\n"
    http_version: 
  recorded_at: Mon, 09 Jan 2017 21:25:36 GMT
recorded_with: VCR 3.0.3
